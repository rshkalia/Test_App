var search_data = {"index":{"searchIndex":["heroku","auth","builtinplugin","cli","client","appcrashed","consolesession","json","rendezvous","service","command","account","addons","apps","auth","base","basewithapp","commandfailed","config","db","domains","drains","help","keys","logs","maintenance","pg","pgbackups","display","datasource","plugins","ps","releases","run","sharing","ssl","stack","status","update","version","deprecated","help","classmethods","helpgroup","distribution","helpers","okjson","parsererror","plugin","updater","herokupostgresql","client","herokusharedpostgresql","client","pgbackups","client","pgresolver","resolver","pgutils","[]()","abbrev()","action()","add()","add()","add()","add()","add()","add()","add()","add_collaborator()","add_config_vars()","add_domain()","add_drain()","add_key()","add_ssl()","addons()","alias_command()","alias_command()","all()","app()","app()","app_url()","arrenc()","arrparse()","ask()","ask_for_and_save_credentials()","ask_for_credentials()","ask_for_password()","ask_for_password_on_windows()","associate_key()","associate_or_generate_ssh_key()","auth()","authenticated_resource()","available_ssh_public_keys()","backup_name()","beta()","bounce()","bounce()","capture()","check()","check_for_associated_ssh_key()","check_for_deprecation()","checking_client_version()","checking_client_version()","clear()","clear()","clear()","clear()","clear_config_vars()","clear_ssl()","client()","command()","command_aliases()","commands()","conf_to_uri_hash()","config_vars()","config_vars()","confirm()","confirm_billing()","confirm_billing()","confirm_billing()","confirm_command()","confirm_mismatch?()","confirm_mismatch?()","console()","console()","console_history_add()","console_history_dir()","console_history_file()","console_history_read()","console_session()","create()","create()","create_complete?()","create_git_remote()","create_request()","create_transfer()","credentials()","credentials_file()","cron()","cron_logs()","current_args()","current_command()","current_options()","database_reset()","database_session()","decode()","default_host()","delete_backup()","delete_credentials()","deprecate()","deprecate_dash_dash_db()","destroy()","destroy()","destroy()","detached()","directory()","directory()","disable()","disable_error_capture()","display()","display_header()","display_heroku_warning()","display_heroku_warning()","display_info()","display_object()","display_row()","display_table()","display_vars()","down()","down()","downgrade()","downgrade_addon()","drains()","dynos()","dynos()","each()","eat()","echo_off()","echo_on()","enable_error_capture()","encode()","end_of_stream?()","enforce_taps_version()","error()","error_with_failure()","escape()","escape()","extended()","extended_into()","extract_app()","extract_app()","extract_app_from_git_config()","extract_app_from_git_config()","extract_app_in_dir()","extract_app_in_dir()","extract_banner()","extract_banner()","extract_description()","extract_description()","extract_error()","extract_help()","extract_help()","extract_help_from_caller()","extract_help_from_caller()","extract_option()","extract_option()","extract_options()","extract_options()","extract_summary()","extract_summary()","extract_warning()","fail()","falsetok()","files()","format()","format_bytes()","format_date()","format_key_for_display()","format_with_bang()","format_with_colors()","gem_version_string()","generate_ssh_key()","get_backup()","get_backups()","get_database()","get_latest_backup()","get_terminal_environment()","get_transfer()","get_transfers()","get_wait_status()","git()","git_remotes()","git_remotes()","global_option()","global_options()","group()","groups()","has_git?()","heroku()","heroku()","hexdec4()","hexenc4()","home_directory()","home_directory()","host()","hprint()","hputs()","http_get()","http_get()","http_post()","http_post()","http_put()","http_put()","httpcache_purge()","included()","included()","included_into()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","info()","info()","info()","info()","ingress()","inherited()","inherited()","init_colors()","inject_libpath()","install()","install()","install_addon()","installation_failed()","installed_addons()","json_decode()","json_encode()","keys()","lex()","list()","list()","list()","list_collaborators()","list_domains()","list_drains()","list_stacks()","load()","load!()","load_plugin()","load_taps()","login()","login()","logout()","logout()","logs()","longest()","maintenance()","message()","method_added()","method_added()","migrate()","migrate_to_stack()","name()","namespace()","namespace()","namespaces()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","nibble()","nulltok()","numenc()","numtok()","objenc()","objparse()","off()","on()","on_warning()","open()","open()","output()","output_with_arrow()","output_with_bang()","pairparse()","parse()","parse()","parse_database_yml()","parse_error_json()","parse_error_plain()","parse_error_xml()","parse_log()","parse_taps_opts()","path()","pgbackup_client()","poll_transfer!()","prepare_run()","pretty_name()","process()","promote()","ps()","ps_restart()","ps_run()","ps_scale()","ps_stop()","psql()","pull()","push()","quantify()","rake()","rake()","read()","read_credentials()","read_logs()","reauthorize()","redisplay()","register_command()","register_namespace()","release()","releases()","remove()","remove()","remove()","remove()","remove()","remove()","remove()","remove_all_keys()","remove_collaborator()","remove_config_var()","remove_domain()","remove_domains()","remove_drain()","remove_key()","remove_plugin()","remove_ssl()","rename()","render()","reset()","reset()","reset_database()","reset_password()","resource()","restart()","restart()","restore()","retry_login?()","retry_on_exception()","rollback()","rollback()","run()","run()","run_command()","run_console_command()","running_on_a_mac?()","running_on_windows?()","running_on_windows?()","scale()","service()","set_buffer()","set_credentials_permissions()","set_dynos()","set_workers()","sha()","sha()","shell()","show_info()","skip_plugins()","space()","spinner()","start()","start()","start()","start()","status()","stop()","strenc()","string_distance()","strtok()","subst()","surrogate?()","sym_keys()","taps_client()","textparse()","ticking()","time_ago()","to_s()","to_s()","tok()","transfer()","transfer!()","transition()","translate_fork_and_follow()","truetok()","truncate()","uchardec()","ucharenc()","unfollow()","unfollow()","uninstall()","uninstall()","uninstall_addon()","unquote()","unsubst()","up()","up()","update()","update()","update_display()","updated_client_path()","upgrade()","upgrade_addon()","uri_hash_to_url()","url()","usage_for_command()","userinfo_from_uri()","valparse()","version()","wait()","with_tty()","workers()","workers()","write_credentials()"],"longSearchIndex":["heroku","heroku::auth","heroku::builtinplugin","heroku::cli","heroku::client","heroku::client::appcrashed","heroku::client::consolesession","heroku::client::json","heroku::client::rendezvous","heroku::client::service","heroku::command","heroku::command::account","heroku::command::addons","heroku::command::apps","heroku::command::auth","heroku::command::base","heroku::command::basewithapp","heroku::command::commandfailed","heroku::command::config","heroku::command::db","heroku::command::domains","heroku::command::drains","heroku::command::help","heroku::command::keys","heroku::command::logs","heroku::command::maintenance","heroku::command::pg","heroku::command::pgbackups","heroku::command::pgbackups::display","heroku::command::pgbackups::display::datasource","heroku::command::plugins","heroku::command::ps","heroku::command::releases","heroku::command::run","heroku::command::sharing","heroku::command::ssl","heroku::command::stack","heroku::command::status","heroku::command::update","heroku::command::version","heroku::deprecated","heroku::deprecated::help","heroku::deprecated::help::classmethods","heroku::deprecated::help::helpgroup","heroku::distribution","heroku::helpers","heroku::okjson","heroku::okjson::parsererror","heroku::plugin","heroku::updater","herokupostgresql","herokupostgresql::client","herokusharedpostgresql","herokusharedpostgresql::client","pgbackups","pgbackups::client","pgresolver","pgresolver::resolver","pgutils","pgresolver::resolver#[]()","heroku::okjson#abbrev()","heroku::helpers#action()","heroku::command::addons#add()","heroku::command::config#add()","heroku::command::domains#add()","heroku::command::drains#add()","heroku::command::keys#add()","heroku::command::sharing#add()","heroku::command::ssl#add()","heroku::client#add_collaborator()","heroku::client#add_config_vars()","heroku::client#add_domain()","heroku::client#add_drain()","heroku::client#add_key()","heroku::client#add_ssl()","heroku::client#addons()","heroku::command::base::alias_command()","heroku::command::base::alias_command()","pgresolver::resolver::all()","heroku::command::base#app()","heroku::command::base#app()","heroku::command::domains#app_url()","heroku::okjson#arrenc()","heroku::okjson#arrparse()","heroku::helpers#ask()","heroku::auth::ask_for_and_save_credentials()","heroku::auth::ask_for_credentials()","heroku::auth::ask_for_password()","heroku::auth::ask_for_password_on_windows()","heroku::auth::associate_key()","heroku::auth::associate_or_generate_ssh_key()","heroku::client::auth()","pgbackups::client#authenticated_resource()","heroku::auth::available_ssh_public_keys()","heroku::command::pgbackups#backup_name()","heroku::command::update#beta()","heroku::client#bounce()","heroku::client::service#bounce()","heroku::command::pgbackups#capture()","heroku::auth::check()","heroku::auth::check_for_associated_ssh_key()","heroku::plugin::check_for_deprecation()","herokupostgresql::client#checking_client_version()","herokusharedpostgresql::client#checking_client_version()","heroku::auth::clear()","heroku::command::domains#clear()","heroku::command::keys#clear()","heroku::command::ssl#clear()","heroku::client#clear_config_vars()","heroku::client#clear_ssl()","heroku::auth::client()","heroku::deprecated::help::helpgroup#command()","heroku::command::command_aliases()","heroku::command::commands()","heroku::command::db#conf_to_uri_hash()","heroku::client#config_vars()","heroku::command::pgbackups#config_vars()","heroku::helpers#confirm()","heroku::client#confirm_billing()","heroku::command::account#confirm_billing()","heroku::helpers#confirm_billing()","heroku::helpers#confirm_command()","heroku::command::base#confirm_mismatch?()","heroku::command::base#confirm_mismatch?()","heroku::client#console()","heroku::command::run#console()","heroku::command::run#console_history_add()","heroku::command::run#console_history_dir()","heroku::command::run#console_history_file()","heroku::command::run#console_history_read()","heroku::command::run#console_session()","heroku::client#create()","heroku::command::apps#create()","heroku::client#create_complete?()","heroku::helpers#create_git_remote()","heroku::client#create_request()","pgbackups::client#create_transfer()","heroku::command::pg#credentials()","heroku::auth::credentials_file()","heroku::command::logs#cron()","heroku::client#cron_logs()","heroku::command::current_args()","heroku::command::current_command()","heroku::command::current_options()","heroku::client#database_reset()","heroku::client#database_session()","heroku::okjson#decode()","heroku::auth::default_host()","pgbackups::client#delete_backup()","heroku::auth::delete_credentials()","heroku::helpers#deprecate()","pgutils#deprecate_dash_dash_db()","heroku::client#destroy()","heroku::command::apps#destroy()","heroku::command::pgbackups#destroy()","heroku::command::run#detached()","heroku::builtinplugin::directory()","heroku::plugin::directory()","heroku::updater::disable()","heroku::helpers::disable_error_capture()","heroku::helpers#display()","heroku::helpers#display_header()","herokupostgresql::client#display_heroku_warning()","herokusharedpostgresql::client#display_heroku_warning()","pgutils#display_info()","heroku::helpers#display_object()","heroku::helpers#display_row()","heroku::helpers#display_table()","heroku::command::config#display_vars()","heroku::client#down()","heroku::client::service#down()","heroku::command::addons#downgrade()","heroku::client#downgrade_addon()","heroku::command::logs#drains()","heroku::client#dynos()","heroku::command::ps#dynos()","heroku::client::service#each()","heroku::okjson#eat()","heroku::auth::echo_off()","heroku::auth::echo_on()","heroku::helpers::enable_error_capture()","heroku::okjson#encode()","heroku::client::service#end_of_stream?()","heroku::command::db#enforce_taps_version()","heroku::helpers#error()","heroku::helpers#error_with_failure()","heroku::command::base#escape()","heroku::command::base#escape()","heroku::helpers::extended()","heroku::helpers::extended_into()","heroku::command::base#extract_app()","heroku::command::base#extract_app()","heroku::command::base#extract_app_from_git_config()","heroku::command::base#extract_app_from_git_config()","heroku::command::base#extract_app_in_dir()","heroku::command::base#extract_app_in_dir()","heroku::command::base::extract_banner()","heroku::command::base::extract_banner()","heroku::command::base::extract_description()","heroku::command::base::extract_description()","heroku::command::extract_error()","heroku::command::base::extract_help()","heroku::command::base::extract_help()","heroku::command::base::extract_help_from_caller()","heroku::command::base::extract_help_from_caller()","heroku::command::base#extract_option()","heroku::command::base#extract_option()","heroku::command::base::extract_options()","heroku::command::base::extract_options()","heroku::command::base::extract_summary()","heroku::command::base::extract_summary()","heroku::client#extract_warning()","heroku::helpers#fail()","heroku::okjson#falsetok()","heroku::distribution::files()","heroku::command::config#format()","heroku::helpers#format_bytes()","heroku::helpers#format_date()","heroku::command::keys#format_key_for_display()","heroku::helpers#format_with_bang()","heroku::command::logs#format_with_colors()","heroku::client::gem_version_string()","heroku::auth::generate_ssh_key()","pgbackups::client#get_backup()","pgbackups::client#get_backups()","herokupostgresql::client#get_database()","pgbackups::client#get_latest_backup()","heroku::helpers#get_terminal_environment()","pgbackups::client#get_transfer()","pgbackups::client#get_transfers()","herokupostgresql::client#get_wait_status()","heroku::helpers#git()","heroku::command::base#git_remotes()","heroku::command::base#git_remotes()","heroku::command::global_option()","heroku::command::global_options()","heroku::deprecated::help::classmethods#group()","heroku::deprecated::help::classmethods#groups()","heroku::helpers#has_git?()","heroku::command::base#heroku()","heroku::command::base#heroku()","heroku::okjson#hexdec4()","heroku::okjson#hexenc4()","heroku::helpers#home_directory()","heroku::updater::home_directory()","heroku::auth::host()","heroku::helpers#hprint()","heroku::helpers#hputs()","herokupostgresql::client#http_get()","herokusharedpostgresql::client#http_get()","herokupostgresql::client#http_post()","herokusharedpostgresql::client#http_post()","herokupostgresql::client#http_put()","herokusharedpostgresql::client#http_put()","heroku::client#httpcache_purge()","heroku::deprecated::help::included()","heroku::helpers::included()","heroku::helpers::included_into()","heroku::command::addons#index()","heroku::command::apps#index()","heroku::command::config#index()","heroku::command::domains#index()","heroku::command::drains#index()","heroku::command::help#index()","heroku::command::keys#index()","heroku::command::logs#index()","heroku::command::pgbackups#index()","heroku::command::plugins#index()","heroku::command::ps#index()","heroku::command::releases#index()","heroku::command::run#index()","heroku::command::sharing#index()","heroku::command::ssl#index()","heroku::command::stack#index()","heroku::command::status#index()","heroku::command::update#index()","heroku::command::version#index()","heroku::client#info()","heroku::command::apps#info()","heroku::command::pg#info()","heroku::command::releases#info()","herokupostgresql::client#ingress()","heroku::command::base::inherited()","heroku::command::base::inherited()","heroku::command::logs#init_colors()","heroku::updater::inject_libpath()","heroku::command::plugins#install()","heroku::plugin#install()","heroku::client#install_addon()","heroku::command::plugins#installation_failed()","heroku::client#installed_addons()","heroku::helpers#json_decode()","heroku::helpers#json_encode()","heroku::client#keys()","heroku::okjson#lex()","heroku::client#list()","heroku::command::addons#list()","heroku::plugin::list()","heroku::client#list_collaborators()","heroku::client#list_domains()","heroku::client#list_drains()","heroku::client#list_stacks()","heroku::command::load()","heroku::plugin::load!()","heroku::plugin::load_plugin()","heroku::command::db#load_taps()","heroku::auth::login()","heroku::command::auth#login()","heroku::auth::logout()","heroku::command::auth#logout()","heroku::client#logs()","heroku::helpers#longest()","heroku::client#maintenance()","pgresolver::resolver#message()","heroku::command::base::method_added()","heroku::command::base::method_added()","heroku::command::stack#migrate()","heroku::client#migrate_to_stack()","pgresolver::resolver#name()","heroku::command::base::namespace()","heroku::command::base::namespace()","heroku::command::namespaces()","heroku::client::new()","heroku::client::consolesession::new()","heroku::client::rendezvous::new()","heroku::client::service::new()","heroku::command::base::new()","heroku::command::base::new()","heroku::command::pgbackups::display::new()","heroku::command::pgbackups::display::datasource::new()","heroku::deprecated::help::helpgroup::new()","heroku::plugin::new()","herokupostgresql::client::new()","herokusharedpostgresql::client::new()","pgbackups::client::new()","pgresolver::resolver::new()","heroku::okjson#nibble()","heroku::okjson#nulltok()","heroku::okjson#numenc()","heroku::okjson#numtok()","heroku::okjson#objenc()","heroku::okjson#objparse()","heroku::command::maintenance#off()","heroku::command::maintenance#on()","heroku::client#on_warning()","heroku::command::addons#open()","heroku::command::apps#open()","heroku::helpers#output()","heroku::helpers#output_with_arrow()","heroku::helpers#output_with_bang()","heroku::okjson#pairparse()","heroku::client::json::parse()","heroku::command::parse()","heroku::command::db#parse_database_yml()","heroku::command::parse_error_json()","heroku::command::parse_error_plain()","heroku::command::parse_error_xml()","heroku::command::logs#parse_log()","heroku::command::db#parse_taps_opts()","heroku::plugin#path()","heroku::command::pgbackups#pgbackup_client()","heroku::command::pgbackups#poll_transfer!()","heroku::command::prepare_run()","pgresolver::resolver#pretty_name()","heroku::client#process()","heroku::command::pg#promote()","heroku::client#ps()","heroku::client#ps_restart()","heroku::client#ps_run()","heroku::client#ps_scale()","heroku::client#ps_stop()","heroku::command::pg#psql()","heroku::command::db#pull()","heroku::command::db#push()","heroku::helpers#quantify()","heroku::client#rake()","heroku::command::run#rake()","heroku::client::service#read()","heroku::auth::read_credentials()","heroku::client#read_logs()","heroku::auth::reauthorize()","heroku::helpers#redisplay()","heroku::command::register_command()","heroku::command::register_namespace()","heroku::client#release()","heroku::client#releases()","heroku::command::addons#remove()","heroku::command::config#remove()","heroku::command::domains#remove()","heroku::command::drains#remove()","heroku::command::keys#remove()","heroku::command::sharing#remove()","heroku::command::ssl#remove()","heroku::client#remove_all_keys()","heroku::client#remove_collaborator()","heroku::client#remove_config_var()","heroku::client#remove_domain()","heroku::client#remove_domains()","heroku::client#remove_drain()","heroku::client#remove_key()","heroku::plugin::remove_plugin()","heroku::client#remove_ssl()","heroku::command::apps#rename()","heroku::command::pgbackups::display#render()","heroku::command::pg#reset()","herokupostgresql::client#reset()","herokusharedpostgresql::client#reset_database()","herokusharedpostgresql::client#reset_password()","heroku::client#resource()","heroku::client#restart()","heroku::command::ps#restart()","heroku::command::pgbackups#restore()","heroku::auth::retry_login?()","heroku::helpers#retry_on_exception()","heroku::client#rollback()","heroku::command::releases#rollback()","heroku::client::consolesession#run()","heroku::command::run()","heroku::helpers#run_command()","heroku::client#run_console_command()","heroku::helpers#running_on_a_mac?()","heroku::helpers#running_on_windows?()","heroku::updater::running_on_windows?()","heroku::command::ps#scale()","heroku::client#service()","heroku::helpers#set_buffer()","heroku::auth::set_credentials_permissions()","heroku::client#set_dynos()","heroku::client#set_workers()","herokupostgresql::client#sha()","herokusharedpostgresql::client#sha()","heroku::helpers#shell()","herokusharedpostgresql::client#show_info()","heroku::plugin::skip_plugins()","heroku::deprecated::help::helpgroup#space()","pgutils#spinner()","heroku::cli::start()","heroku::client#start()","heroku::client::rendezvous#start()","heroku::client::service#start()","heroku::helpers#status()","heroku::command::ps#stop()","heroku::okjson#strenc()","heroku::helpers#string_distance()","heroku::okjson#strtok()","heroku::okjson#subst()","heroku::okjson#surrogate?()","herokupostgresql::client#sym_keys()","heroku::command::db#taps_client()","heroku::okjson#textparse()","pgutils#ticking()","heroku::helpers#time_ago()","heroku::client::service#to_s()","heroku::plugin#to_s()","heroku::okjson#tok()","heroku::command::sharing#transfer()","heroku::command::pgbackups#transfer!()","heroku::client::service#transition()","pgutils#translate_fork_and_follow()","heroku::okjson#truetok()","heroku::helpers#truncate()","heroku::okjson#uchardec()","heroku::okjson#ucharenc()","heroku::command::pg#unfollow()","herokupostgresql::client#unfollow()","heroku::command::plugins#uninstall()","heroku::plugin#uninstall()","heroku::client#uninstall_addon()","heroku::okjson#unquote()","heroku::okjson#unsubst()","heroku::client#up()","heroku::client::service#up()","heroku::client#update()","heroku::updater::update()","heroku::command::pgbackups#update_display()","heroku::updater::updated_client_path()","heroku::command::addons#upgrade()","heroku::client#upgrade_addon()","heroku::command::db#uri_hash_to_url()","heroku::command::pgbackups#url()","heroku::command::help::usage_for_command()","heroku::command::db#userinfo_from_uri()","heroku::okjson#valparse()","heroku::client::version()","heroku::command::pg#wait()","heroku::helpers#with_tty()","heroku::client#workers()","heroku::command::ps#workers()","heroku::auth::write_credentials()"],"info":[["Heroku","","Heroku.html","","<p>based on the Rails Plugin\n<p>Some parts adapted from golang.org/src/pkg/json/decode.go and\ngolang.org/src/pkg/utf8/utf8.go ...\n"],["Heroku::Auth","","Heroku/Auth.html","",""],["Heroku::BuiltinPlugin","","Heroku/BuiltinPlugin.html","",""],["Heroku::CLI","","Heroku/CLI.html","",""],["Heroku::Client","","Heroku/Client.html","","<p>A Ruby class to call the Heroku REST API.  You might use this if you want\nto manage your Heroku apps ...\n"],["Heroku::Client::AppCrashed","","Heroku/Client/AppCrashed.html","",""],["Heroku::Client::ConsoleSession","","Heroku/Client/ConsoleSession.html","","<p>support for console sessions\n"],["Heroku::Client::JSON","","Heroku/Client/JSON.html","",""],["Heroku::Client::Rendezvous","","Heroku/Client/Rendezvous.html","",""],["Heroku::Client::Service","","Heroku/Client/Service.html","",""],["Heroku::Command","","Heroku/Command.html","",""],["Heroku::Command::Account","","Heroku/Command/Account.html","","<p>manage heroku account options\n"],["Heroku::Command::Addons","","Heroku/Command/Addons.html","","<p>manage addon resources\n"],["Heroku::Command::Apps","","Heroku/Command/Apps.html","","<p>manage apps (create, destroy)\n"],["Heroku::Command::Auth","","Heroku/Command/Auth.html","","<p>authentication (login, logout)\n"],["Heroku::Command::Base","","Heroku/Command/Base.html","",""],["Heroku::Command::BaseWithApp","","Heroku/Command/Base.html","",""],["Heroku::Command::CommandFailed","","Heroku/Command/CommandFailed.html","",""],["Heroku::Command::Config","","Heroku/Command/Config.html","","<p>manage app config vars\n"],["Heroku::Command::Db","","Heroku/Command/Db.html","","<p>manage the database for an app\n"],["Heroku::Command::Domains","","Heroku/Command/Domains.html","","<p>manage custom domains\n"],["Heroku::Command::Drains","","Heroku/Command/Drains.html","","<p>display syslog drains for an app\n"],["Heroku::Command::Help","","Heroku/Command/Help.html","","<p>list commands and display help\n"],["Heroku::Command::Keys","","Heroku/Command/Keys.html","","<p>manage authentication keys\n"],["Heroku::Command::Logs","","Heroku/Command/Logs.html","","<p>display logs for an app\n"],["Heroku::Command::Maintenance","","Heroku/Command/Maintenance.html","","<p>toggle maintenance mode\n"],["Heroku::Command::Pg","","Heroku/Command/Pg.html","","<p>manage heroku postgresql databases\n"],["Heroku::Command::Pgbackups","","Heroku/Command/Pgbackups.html","","<p>manage backups of heroku postgresql databases\n"],["Heroku::Command::Pgbackups::Display","","Heroku/Command/Pgbackups/Display.html","",""],["Heroku::Command::Pgbackups::Display::DataSource","","Heroku/Command/Pgbackups/Display/DataSource.html","",""],["Heroku::Command::Plugins","","Heroku/Command/Plugins.html","","<p>manage plugins to the heroku gem\n"],["Heroku::Command::Ps","","Heroku/Command/Ps.html","","<p>manage processes (dynos, workers)\n"],["Heroku::Command::Releases","","Heroku/Command/Releases.html","","<p>view release history of an app\n"],["Heroku::Command::Run","","Heroku/Command/Run.html","","<p>run one-off commands (console, rake)\n"],["Heroku::Command::Sharing","","Heroku/Command/Sharing.html","","<p>manage collaborators on an app\n"],["Heroku::Command::Ssl","","Heroku/Command/Ssl.html","","<p>manage ssl certificates for an app\n"],["Heroku::Command::Stack","","Heroku/Command/Stack.html","","<p>manage the stack for an app\n"],["Heroku::Command::Status","","Heroku/Command/Status.html","","<p>check status of Heroku platform\n"],["Heroku::Command::Update","","Heroku/Command/Update.html","","<p>update the heroku client\n"],["Heroku::Command::Version","","Heroku/Command/Version.html","","<p>display version\n"],["Heroku::Deprecated","","Heroku/Deprecated.html","",""],["Heroku::Deprecated::Help","","Heroku/Deprecated/Help.html","",""],["Heroku::Deprecated::Help::ClassMethods","","Heroku/Deprecated/Help/ClassMethods.html","",""],["Heroku::Deprecated::Help::HelpGroup","","Heroku/Deprecated/Help/HelpGroup.html","",""],["Heroku::Distribution","","Heroku/Distribution.html","",""],["Heroku::Helpers","","Heroku/Helpers.html","",""],["Heroku::OkJson","","Heroku/OkJson.html","",""],["Heroku::OkJson::ParserError","","Heroku/OkJson/ParserError.html","",""],["Heroku::Plugin","","Heroku/Plugin.html","",""],["Heroku::Updater","","Heroku/Updater.html","",""],["HerokuPostgresql","","HerokuPostgresql.html","",""],["HerokuPostgresql::Client","","HerokuPostgresql/Client.html","",""],["HerokuSharedPostgresql","","HerokuSharedPostgresql.html","",""],["HerokuSharedPostgresql::Client","","HerokuSharedPostgresql/Client.html","",""],["PGBackups","","PGBackups.html","",""],["PGBackups::Client","","PGBackups/Client.html","",""],["PGResolver","","PGResolver.html","",""],["PGResolver::Resolver","","PGResolver/Resolver.html","",""],["PgUtils","","PgUtils.html","",""],["[]","PGResolver::Resolver","PGResolver/Resolver.html#method-i-5B-5D","(arg)",""],["abbrev","Heroku::OkJson","Heroku/OkJson.html#method-i-abbrev","(s)",""],["action","Heroku::Helpers","Heroku/Helpers.html#method-i-action","(message)","<p>DISPLAY HELPERS\n"],["add","Heroku::Command::Addons","Heroku/Command/Addons.html#method-i-add","()","<p>addons:add ADDON\n<p>install an addon\n"],["add","Heroku::Command::Config","Heroku/Command/Config.html#method-i-add","()","<p>config:add KEY1=VALUE1 ...\n<p>add one or more config vars\n"],["add","Heroku::Command::Domains","Heroku/Command/Domains.html#method-i-add","()","<p>domains:add DOMAIN\n<p>add a custom domain to an app\n"],["add","Heroku::Command::Drains","Heroku/Command/Drains.html#method-i-add","()","<p>drains:add URL\n<p>add a syslog drain\n"],["add","Heroku::Command::Keys","Heroku/Command/Keys.html#method-i-add","()","<p>keys:add [KEY]\n<p>add a key for the current user\n<p>if no KEY is specified, will try to find ~/.ssh/id_[rd]sa.pub ...\n"],["add","Heroku::Command::Sharing","Heroku/Command/Sharing.html#method-i-add","()","<p>sharing:add EMAIL\n<p>add a collaborator to an app\n"],["add","Heroku::Command::Ssl","Heroku/Command/Ssl.html#method-i-add","()","<p>ssl:add PEM KEY\n<p>add an ssl certificate to an app\n"],["add_collaborator","Heroku::Client","Heroku/Client.html#method-i-add_collaborator","(app_name, email)","<p>Invite a person by email address to collaborate on the app.\n"],["add_config_vars","Heroku::Client","Heroku/Client.html#method-i-add_config_vars","(app_name, new_vars)",""],["add_domain","Heroku::Client","Heroku/Client.html#method-i-add_domain","(app_name, domain)",""],["add_drain","Heroku::Client","Heroku/Client.html#method-i-add_drain","(app_name, url)",""],["add_key","Heroku::Client","Heroku/Client.html#method-i-add_key","(key)","<p>Add an ssh public key to the current user.\n"],["add_ssl","Heroku::Client","Heroku/Client.html#method-i-add_ssl","(app_name, pem, key)",""],["addons","Heroku::Client","Heroku/Client.html#method-i-addons","()",""],["alias_command","Heroku::Command::Base","Heroku/Command/Base.html#method-c-alias_command","(new, old)",""],["alias_command","Heroku::Command::Base","Heroku/Command/Base.html#method-c-alias_command","(new, old)",""],["all","PGResolver::Resolver","PGResolver/Resolver.html#method-c-all","(config_vars)",""],["app","Heroku::Command::Base","Heroku/Command/Base.html#method-i-app","()",""],["app","Heroku::Command::Base","Heroku/Command/Base.html#method-i-app","()",""],["app_url","Heroku::Command::Domains","Heroku/Command/Domains.html#method-i-app_url","()",""],["arrenc","Heroku::OkJson","Heroku/OkJson.html#method-i-arrenc","(a)",""],["arrparse","Heroku::OkJson","Heroku/OkJson.html#method-i-arrparse","(ts)","<p>Parses an \"array\" in the sense of RFC 4627. Returns the parsed value and\nany trailing tokens. ...\n"],["ask","Heroku::Helpers","Heroku/Helpers.html#method-i-ask","()",""],["ask_for_and_save_credentials","Heroku::Auth","Heroku/Auth.html#method-c-ask_for_and_save_credentials","()",""],["ask_for_credentials","Heroku::Auth","Heroku/Auth.html#method-c-ask_for_credentials","()",""],["ask_for_password","Heroku::Auth","Heroku/Auth.html#method-c-ask_for_password","()",""],["ask_for_password_on_windows","Heroku::Auth","Heroku/Auth.html#method-c-ask_for_password_on_windows","()",""],["associate_key","Heroku::Auth","Heroku/Auth.html#method-c-associate_key","(key)",""],["associate_or_generate_ssh_key","Heroku::Auth","Heroku/Auth.html#method-c-associate_or_generate_ssh_key","()",""],["auth","Heroku::Client","Heroku/Client.html#method-c-auth","(user, password, host=Heroku::Auth.default_host)",""],["authenticated_resource","PGBackups::Client","PGBackups/Client.html#method-i-authenticated_resource","(path)",""],["available_ssh_public_keys","Heroku::Auth","Heroku/Auth.html#method-c-available_ssh_public_keys","()",""],["backup_name","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-backup_name","(to_url)",""],["beta","Heroku::Command::Update","Heroku/Command/Update.html#method-i-beta","()","<p>update:beta\n<p>update to the latest beta client\n"],["bounce","Heroku::Client","Heroku/Client.html#method-i-bounce","(app_name, upid)","<p>Bounce a service.\n"],["bounce","Heroku::Client::Service","Heroku/Client/Service.html#method-i-bounce","()",""],["capture","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-capture","()","<p>pgbackups:capture [DATABASE]\n<p>capture a backup from a database id\n<p>if no DATABASE is specified, defaults ...\n"],["check","Heroku::Auth","Heroku/Auth.html#method-c-check","()","<p>just a stub; will raise if not authenticated\n"],["check_for_associated_ssh_key","Heroku::Auth","Heroku/Auth.html#method-c-check_for_associated_ssh_key","()",""],["check_for_deprecation","Heroku::Plugin","Heroku/Plugin.html#method-c-check_for_deprecation","(plugin)",""],["checking_client_version","HerokuPostgresql::Client","HerokuPostgresql/Client.html#method-i-checking_client_version","()",""],["checking_client_version","HerokuSharedPostgresql::Client","HerokuSharedPostgresql/Client.html#method-i-checking_client_version","()",""],["clear","Heroku::Auth","Heroku/Auth.html#method-c-clear","()",""],["clear","Heroku::Command::Domains","Heroku/Command/Domains.html#method-i-clear","()","<p>domains:clear\n<p>remove all custom domains from an app\n"],["clear","Heroku::Command::Keys","Heroku/Command/Keys.html#method-i-clear","()","<p>keys:clear\n<p>remove all authentication keys from the current user\n"],["clear","Heroku::Command::Ssl","Heroku/Command/Ssl.html#method-i-clear","()","<p>ssl:clear\n<p>remove all ssl certificates from an app\n"],["clear_config_vars","Heroku::Client","Heroku/Client.html#method-i-clear_config_vars","(app_name)",""],["clear_ssl","Heroku::Client","Heroku/Client.html#method-i-clear_ssl","(app_name)",""],["client","Heroku::Auth","Heroku/Auth.html#method-c-client","()",""],["command","Heroku::Deprecated::Help::HelpGroup","Heroku/Deprecated/Help/HelpGroup.html#method-i-command","(name, description)",""],["command_aliases","Heroku::Command","Heroku/Command.html#method-c-command_aliases","()",""],["commands","Heroku::Command","Heroku/Command.html#method-c-commands","()",""],["conf_to_uri_hash","Heroku::Command::Db","Heroku/Command/Db.html#method-i-conf_to_uri_hash","(conf)",""],["config_vars","Heroku::Client","Heroku/Client.html#method-i-config_vars","(app_name)",""],["config_vars","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-config_vars","()",""],["confirm","Heroku::Helpers","Heroku/Helpers.html#method-i-confirm","(message=\"Are you sure you wish to continue? (y/n)?\")",""],["confirm_billing","Heroku::Client","Heroku/Client.html#method-i-confirm_billing","()",""],["confirm_billing","Heroku::Command::Account","Heroku/Command/Account.html#method-i-confirm_billing","()","<p>account:confirm_billing\n<p>Confirm that your account can be billed at the end of the month\n"],["confirm_billing","Heroku::Helpers","Heroku/Helpers.html#method-i-confirm_billing","()",""],["confirm_command","Heroku::Helpers","Heroku/Helpers.html#method-i-confirm_command","(message=nil)",""],["confirm_mismatch?","Heroku::Command::Base","Heroku/Command/Base.html#method-i-confirm_mismatch-3F","()",""],["confirm_mismatch?","Heroku::Command::Base","Heroku/Command/Base.html#method-i-confirm_mismatch-3F","()",""],["console","Heroku::Client","Heroku/Client.html#method-i-console","(app_name, cmd=nil)","<p>Execute a one-off console command, or start a new console tty session if\ncmd is nil.\n"],["console","Heroku::Command::Run","Heroku/Command/Run.html#method-i-console","()","<p>run:console [COMMAND]\n<p>open a remote console session\n<p>if COMMAND is specified, run the command and exit\n"],["console_history_add","Heroku::Command::Run","Heroku/Command/Run.html#method-i-console_history_add","(app, cmd)",""],["console_history_dir","Heroku::Command::Run","Heroku/Command/Run.html#method-i-console_history_dir","()",""],["console_history_file","Heroku::Command::Run","Heroku/Command/Run.html#method-i-console_history_file","(app)",""],["console_history_read","Heroku::Command::Run","Heroku/Command/Run.html#method-i-console_history_read","(app)",""],["console_session","Heroku::Command::Run","Heroku/Command/Run.html#method-i-console_session","(app)",""],["create","Heroku::Client","Heroku/Client.html#method-i-create","(name=nil, options={})","<p>Create a new app, with an optional name.\n"],["create","Heroku::Command::Apps","Heroku/Command/Apps.html#method-i-create","()","<p>apps:create [NAME]\n<p>create a new app\n\n<pre>--addons ADDONS        # a list of addons to install</pre>\n"],["create_complete?","Heroku::Client","Heroku/Client.html#method-i-create_complete-3F","(name)",""],["create_git_remote","Heroku::Helpers","Heroku/Helpers.html#method-i-create_git_remote","(remote, url)",""],["create_request","Heroku::Client","Heroku/Client.html#method-i-create_request","(name=nil, options={})",""],["create_transfer","PGBackups::Client","PGBackups/Client.html#method-i-create_transfer","(from_url, from_name, to_url, to_name, opts={})",""],["credentials","Heroku::Command::Pg","Heroku/Command/Pg.html#method-i-credentials","()","<p>pg:credentials [DATABASE]\n<p>Display the DATABASE credentials.\n\n<pre>--reset       # Reset credentials on the specified ...</pre>\n"],["credentials_file","Heroku::Auth","Heroku/Auth.html#method-c-credentials_file","()",""],["cron","Heroku::Command::Logs","Heroku/Command/Logs.html#method-i-cron","()","<p>logs:cron\n<p>DEPRECATED: display cron logs from legacy logging\n"],["cron_logs","Heroku::Client","Heroku/Client.html#method-i-cron_logs","(app_name)","<p>Fetch recent cron logs from the app server.\n"],["current_args","Heroku::Command","Heroku/Command.html#method-c-current_args","()",""],["current_command","Heroku::Command","Heroku/Command.html#method-c-current_command","()",""],["current_options","Heroku::Command","Heroku/Command.html#method-c-current_options","()",""],["database_reset","Heroku::Client","Heroku/Client.html#method-i-database_reset","(app_name)",""],["database_session","Heroku::Client","Heroku/Client.html#method-i-database_session","(app_name)",""],["decode","Heroku::OkJson","Heroku/OkJson.html#method-i-decode","(s)","<p>Decodes a json document in string s and returns the corresponding ruby\nvalue. String s must be valid ...\n"],["default_host","Heroku::Auth","Heroku/Auth.html#method-c-default_host","()",""],["delete_backup","PGBackups::Client","PGBackups/Client.html#method-i-delete_backup","(name)",""],["delete_credentials","Heroku::Auth","Heroku/Auth.html#method-c-delete_credentials","()",""],["deprecate","Heroku::Helpers","Heroku/Helpers.html#method-i-deprecate","(version)",""],["deprecate_dash_dash_db","PgUtils","PgUtils.html#method-i-deprecate_dash_dash_db","(name)",""],["destroy","Heroku::Client","Heroku/Client.html#method-i-destroy","(name)","<p>Destroy the app permanently.\n"],["destroy","Heroku::Command::Apps","Heroku/Command/Apps.html#method-i-destroy","()","<p>apps:destroy\n<p>permanently destroy an app\n"],["destroy","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-destroy","()","<p>pgbackups:destroy BACKUP_ID\n<p>destroys a backup\n"],["detached","Heroku::Command::Run","Heroku/Command/Run.html#method-i-detached","()","<p>run:detached COMMAND\n<p>run a detached process, where output is sent to your logs\n"],["directory","Heroku::BuiltinPlugin","Heroku/BuiltinPlugin.html#method-c-directory","()",""],["directory","Heroku::Plugin","Heroku/Plugin.html#method-c-directory","()",""],["disable","Heroku::Updater","Heroku/Updater.html#method-c-disable","(message=nil)",""],["disable_error_capture","Heroku::Helpers","Heroku/Helpers.html#method-c-disable_error_capture","()",""],["display","Heroku::Helpers","Heroku/Helpers.html#method-i-display","(msg=\"\", new_line=true)",""],["display_header","Heroku::Helpers","Heroku/Helpers.html#method-i-display_header","(message=\"\", new_line=true)",""],["display_heroku_warning","HerokuPostgresql::Client","HerokuPostgresql/Client.html#method-i-display_heroku_warning","(response)",""],["display_heroku_warning","HerokuSharedPostgresql::Client","HerokuSharedPostgresql/Client.html#method-i-display_heroku_warning","(response)",""],["display_info","PgUtils","PgUtils.html#method-i-display_info","(label, info)",""],["display_object","Heroku::Helpers","Heroku/Helpers.html#method-i-display_object","(object)",""],["display_row","Heroku::Helpers","Heroku/Helpers.html#method-i-display_row","(row, lengths)",""],["display_table","Heroku::Helpers","Heroku/Helpers.html#method-i-display_table","(objects, columns, headers)",""],["display_vars","Heroku::Command::Config","Heroku/Command/Config.html#method-i-display_vars","(vars, options={})",""],["down","Heroku::Client","Heroku/Client.html#method-i-down","(app_name, upid)","<p>Bring a service down.\n"],["down","Heroku::Client::Service","Heroku/Client/Service.html#method-i-down","()",""],["downgrade","Heroku::Command::Addons","Heroku/Command/Addons.html#method-i-downgrade","()","<p>addons:downgrade ADDON\n<p>downgrade an existing addon\n"],["downgrade_addon","Heroku::Client","Heroku/Client.html#method-i-downgrade_addon","(app_name, addon, config={})",""],["drains","Heroku::Command::Logs","Heroku/Command/Logs.html#method-i-drains","()","<p>logs:drains\n<p>DEPRECATED: use `heroku drains`\n"],["dynos","Heroku::Client","Heroku/Client.html#method-i-dynos","(app_name)",""],["dynos","Heroku::Command::Ps","Heroku/Command/Ps.html#method-i-dynos","()","<p>ps:dynos [QTY]\n<p>scale to QTY web processes\n<p>if QTY is not specified, display the number of web processes ...\n"],["each","Heroku::Client::Service","Heroku/Client/Service.html#method-i-each","()","<p>Iterate over all output chunks until EOF is reached.\n"],["eat","Heroku::OkJson","Heroku/OkJson.html#method-i-eat","(typ, ts)",""],["echo_off","Heroku::Auth","Heroku/Auth.html#method-c-echo_off","()",""],["echo_on","Heroku::Auth","Heroku/Auth.html#method-c-echo_on","()",""],["enable_error_capture","Heroku::Helpers","Heroku/Helpers.html#method-c-enable_error_capture","()",""],["encode","Heroku::OkJson","Heroku/OkJson.html#method-i-encode","(x)","<p>Encodes x into a json text. It may contain only Array, Hash, String,\nNumeric, true, false, nil. (Note ...\n"],["end_of_stream?","Heroku::Client::Service","Heroku/Client/Service.html#method-i-end_of_stream-3F","()","<p>Does the service have any remaining output?\n"],["enforce_taps_version","Heroku::Command::Db","Heroku/Command/Db.html#method-i-enforce_taps_version","(version)",""],["error","Heroku::Helpers","Heroku/Helpers.html#method-i-error","(msg)",""],["error_with_failure","Heroku::Helpers","Heroku/Helpers.html#method-i-error_with_failure","(message)",""],["escape","Heroku::Command::Base","Heroku/Command/Base.html#method-i-escape","(value)",""],["escape","Heroku::Command::Base","Heroku/Command/Base.html#method-i-escape","(value)",""],["extended","Heroku::Helpers","Heroku/Helpers.html#method-c-extended","(base)",""],["extended_into","Heroku::Helpers","Heroku/Helpers.html#method-c-extended_into","()",""],["extract_app","Heroku::Command::Base","Heroku/Command/Base.html#method-i-extract_app","()",""],["extract_app","Heroku::Command::Base","Heroku/Command/Base.html#method-i-extract_app","()",""],["extract_app_from_git_config","Heroku::Command::Base","Heroku/Command/Base.html#method-i-extract_app_from_git_config","()",""],["extract_app_from_git_config","Heroku::Command::Base","Heroku/Command/Base.html#method-i-extract_app_from_git_config","()",""],["extract_app_in_dir","Heroku::Command::Base","Heroku/Command/Base.html#method-i-extract_app_in_dir","(dir)",""],["extract_app_in_dir","Heroku::Command::Base","Heroku/Command/Base.html#method-i-extract_app_in_dir","(dir)",""],["extract_banner","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_banner","(help)",""],["extract_banner","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_banner","(help)",""],["extract_description","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_description","(help)",""],["extract_description","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_description","(help)",""],["extract_error","Heroku::Command","Heroku/Command.html#method-c-extract_error","(body, options={})",""],["extract_help","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_help","(file, line)",""],["extract_help","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_help","(file, line)",""],["extract_help_from_caller","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_help_from_caller","(line)","<p>Parse the caller format and identify the file and line number as identified\nin : www.ruby-doc.org/core/classes/Kernel.html#M001397 ...\n"],["extract_help_from_caller","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_help_from_caller","(line)","<p>Parse the caller format and identify the file and line number as identified\nin : www.ruby-doc.org/core/classes/Kernel.html#M001397 ...\n"],["extract_option","Heroku::Command::Base","Heroku/Command/Base.html#method-i-extract_option","(name, default=true)",""],["extract_option","Heroku::Command::Base","Heroku/Command/Base.html#method-i-extract_option","(name, default=true)",""],["extract_options","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_options","(help)",""],["extract_options","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_options","(help)",""],["extract_summary","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_summary","(help)",""],["extract_summary","Heroku::Command::Base","Heroku/Command/Base.html#method-c-extract_summary","(help)",""],["extract_warning","Heroku::Client","Heroku/Client.html#method-i-extract_warning","(response)",""],["fail","Heroku::Helpers","Heroku/Helpers.html#method-i-fail","(message)",""],["falsetok","Heroku::OkJson","Heroku/OkJson.html#method-i-falsetok","(s)",""],["files","Heroku::Distribution","Heroku/Distribution.html#method-c-files","()",""],["format","Heroku::Command::Config","Heroku/Command/Config.html#method-i-format","(value, options)",""],["format_bytes","Heroku::Helpers","Heroku/Helpers.html#method-i-format_bytes","(amount)",""],["format_date","Heroku::Helpers","Heroku/Helpers.html#method-i-format_date","(date)",""],["format_key_for_display","Heroku::Command::Keys","Heroku/Command/Keys.html#method-i-format_key_for_display","(key)",""],["format_with_bang","Heroku::Helpers","Heroku/Helpers.html#method-i-format_with_bang","(message)",""],["format_with_colors","Heroku::Command::Logs","Heroku/Command/Logs.html#method-i-format_with_colors","(chunk)",""],["gem_version_string","Heroku::Client","Heroku/Client.html#method-c-gem_version_string","()",""],["generate_ssh_key","Heroku::Auth","Heroku/Auth.html#method-c-generate_ssh_key","(keyfile)",""],["get_backup","PGBackups::Client","PGBackups/Client.html#method-i-get_backup","(name, opts={})",""],["get_backups","PGBackups::Client","PGBackups/Client.html#method-i-get_backups","(opts={})",""],["get_database","HerokuPostgresql::Client","HerokuPostgresql/Client.html#method-i-get_database","()",""],["get_latest_backup","PGBackups::Client","PGBackups/Client.html#method-i-get_latest_backup","()",""],["get_terminal_environment","Heroku::Helpers","Heroku/Helpers.html#method-i-get_terminal_environment","()",""],["get_transfer","PGBackups::Client","PGBackups/Client.html#method-i-get_transfer","(id)",""],["get_transfers","PGBackups::Client","PGBackups/Client.html#method-i-get_transfers","()",""],["get_wait_status","HerokuPostgresql::Client","HerokuPostgresql/Client.html#method-i-get_wait_status","()",""],["git","Heroku::Helpers","Heroku/Helpers.html#method-i-git","(args)",""],["git_remotes","Heroku::Command::Base","Heroku/Command/Base.html#method-i-git_remotes","(base_dir=Dir.pwd)",""],["git_remotes","Heroku::Command::Base","Heroku/Command/Base.html#method-i-git_remotes","(base_dir=Dir.pwd)",""],["global_option","Heroku::Command","Heroku/Command.html#method-c-global_option","(name, *args)",""],["global_options","Heroku::Command","Heroku/Command.html#method-c-global_options","()",""],["group","Heroku::Deprecated::Help::ClassMethods","Heroku/Deprecated/Help/ClassMethods.html#method-i-group","(title, &block)",""],["groups","Heroku::Deprecated::Help::ClassMethods","Heroku/Deprecated/Help/ClassMethods.html#method-i-groups","()",""],["has_git?","Heroku::Helpers","Heroku/Helpers.html#method-i-has_git-3F","()",""],["heroku","Heroku::Command::Base","Heroku/Command/Base.html#method-i-heroku","()",""],["heroku","Heroku::Command::Base","Heroku/Command/Base.html#method-i-heroku","()",""],["hexdec4","Heroku::OkJson","Heroku/OkJson.html#method-i-hexdec4","(s)",""],["hexenc4","Heroku::OkJson","Heroku/OkJson.html#method-i-hexenc4","(t, u)",""],["home_directory","Heroku::Helpers","Heroku/Helpers.html#method-i-home_directory","()",""],["home_directory","Heroku::Updater","Heroku/Updater.html#method-c-home_directory","()",""],["host","Heroku::Auth","Heroku/Auth.html#method-c-host","()",""],["hprint","Heroku::Helpers","Heroku/Helpers.html#method-i-hprint","(string='')",""],["hputs","Heroku::Helpers","Heroku/Helpers.html#method-i-hputs","(string='')",""],["http_get","HerokuPostgresql::Client","HerokuPostgresql/Client.html#method-i-http_get","(path)",""],["http_get","HerokuSharedPostgresql::Client","HerokuSharedPostgresql/Client.html#method-i-http_get","(path)",""],["http_post","HerokuPostgresql::Client","HerokuPostgresql/Client.html#method-i-http_post","(path, payload = {})",""],["http_post","HerokuSharedPostgresql::Client","HerokuSharedPostgresql/Client.html#method-i-http_post","(path, payload = {})",""],["http_put","HerokuPostgresql::Client","HerokuPostgresql/Client.html#method-i-http_put","(path, payload = {})",""],["http_put","HerokuSharedPostgresql::Client","HerokuSharedPostgresql/Client.html#method-i-http_put","(path, payload = {})",""],["httpcache_purge","Heroku::Client","Heroku/Client.html#method-i-httpcache_purge","(app_name)",""],["included","Heroku::Deprecated::Help","Heroku/Deprecated/Help.html#method-c-included","(base)",""],["included","Heroku::Helpers","Heroku/Helpers.html#method-c-included","(base)",""],["included_into","Heroku::Helpers","Heroku/Helpers.html#method-c-included_into","()",""],["index","Heroku::Command::Addons","Heroku/Command/Addons.html#method-i-index","()","<p>addons\n<p>list installed addons\n"],["index","Heroku::Command::Apps","Heroku/Command/Apps.html#method-i-index","()","<p>apps\n<p>list your apps\n"],["index","Heroku::Command::Config","Heroku/Command/Config.html#method-i-index","()","<p>config\n<p>display the config vars for an app\n<p>-s, --shell  # output config vars in shell format\n"],["index","Heroku::Command::Domains","Heroku/Command/Domains.html#method-i-index","()","<p>domains\n<p>list custom domains for an app\n"],["index","Heroku::Command::Drains","Heroku/Command/Drains.html#method-i-index","()","<p>drains\n<p>list all syslog drains\n"],["index","Heroku::Command::Help","Heroku/Command/Help.html#method-i-index","()","<p>help [COMMAND]\n<p>list available commands or display help for a specific command\n"],["index","Heroku::Command::Keys","Heroku/Command/Keys.html#method-i-index","()","<p>keys\n<p>display keys for the current user\n<p>-l, --long  # display extended information for each key\n"],["index","Heroku::Command::Logs","Heroku/Command/Logs.html#method-i-index","()","<p>logs\n<p>display recent log output\n<p>-n, --num NUM        # the number of lines to display -p, --ps PS       ...\n"],["index","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-index","()","<p>pgbackups\n<p>list captured backups\n"],["index","Heroku::Command::Plugins","Heroku/Command/Plugins.html#method-i-index","()","<p>plugins\n<p>list installed plugins\n"],["index","Heroku::Command::Ps","Heroku/Command/Ps.html#method-i-index","()","<p>ps\n<p>list processes for an app\n"],["index","Heroku::Command::Releases","Heroku/Command/Releases.html#method-i-index","()","<p>releases\n<p>list releases\n"],["index","Heroku::Command::Run","Heroku/Command/Run.html#method-i-index","()","<p>run COMMAND\n<p>run an attached process\n"],["index","Heroku::Command::Sharing","Heroku/Command/Sharing.html#method-i-index","()","<p>sharing\n<p>list collaborators on an app\n"],["index","Heroku::Command::Ssl","Heroku/Command/Ssl.html#method-i-index","()","<p>ssl\n<p>list certificates for an app\n"],["index","Heroku::Command::Stack","Heroku/Command/Stack.html#method-i-index","()","<p>stack\n<p>show the list of available stacks\n<p>--all  # include deprecated stacks\n"],["index","Heroku::Command::Status","Heroku/Command/Status.html#method-i-index","()","<p>status\n<p>display current status of Heroku platform\n"],["index","Heroku::Command::Update","Heroku/Command/Update.html#method-i-index","()","<p>update\n<p>update the heroku client\n"],["index","Heroku::Command::Version","Heroku/Command/Version.html#method-i-index","()","<p>version\n<p>show heroku client version\n"],["info","Heroku::Client","Heroku/Client.html#method-i-info","(name_or_domain)","<p>Show info such as mode, custom domain, and collaborators on an app.\n"],["info","Heroku::Command::Apps","Heroku/Command/Apps.html#method-i-info","()","<p>apps:info\n<p>show detailed app information\n<p>-r, --raw  # output info as raw key/value pairs\n"],["info","Heroku::Command::Pg","Heroku/Command/Pg.html#method-i-info","()","<p>pg:info [DATABASE]\n<p>Display database information\n<p>defaults to all databases if no DATABASE is specified\n"],["info","Heroku::Command::Releases","Heroku/Command/Releases.html#method-i-info","()","<p>releases:info RELEASE\n<p>view detailed information for a release\n"],["ingress","HerokuPostgresql::Client","HerokuPostgresql/Client.html#method-i-ingress","()",""],["inherited","Heroku::Command::Base","Heroku/Command/Base.html#method-c-inherited","(klass)",""],["inherited","Heroku::Command::Base","Heroku/Command/Base.html#method-c-inherited","(klass)",""],["init_colors","Heroku::Command::Logs","Heroku/Command/Logs.html#method-i-init_colors","(colorizer=nil)",""],["inject_libpath","Heroku::Updater","Heroku/Updater.html#method-c-inject_libpath","()",""],["install","Heroku::Command::Plugins","Heroku/Command/Plugins.html#method-i-install","()","<p>plugins:install URL\n<p>install a plugin\n"],["install","Heroku::Plugin","Heroku/Plugin.html#method-i-install","()",""],["install_addon","Heroku::Client","Heroku/Client.html#method-i-install_addon","(app_name, addon, config={})",""],["installation_failed","Heroku::Command::Plugins","Heroku/Command/Plugins.html#method-i-installation_failed","(plugin, message)",""],["installed_addons","Heroku::Client","Heroku/Client.html#method-i-installed_addons","(app_name)",""],["json_decode","Heroku::Helpers","Heroku/Helpers.html#method-i-json_decode","(json)",""],["json_encode","Heroku::Helpers","Heroku/Helpers.html#method-i-json_encode","(object)",""],["keys","Heroku::Client","Heroku/Client.html#method-i-keys","()","<p>Get the list of ssh public keys for the current user.\n"],["lex","Heroku::OkJson","Heroku/OkJson.html#method-i-lex","(s)","<p>Sans s and returns a list of json tokens, excluding white space (as defined\nin RFC 4627).\n"],["list","Heroku::Client","Heroku/Client.html#method-i-list","()","<p>Show a list of apps which you are a collaborator on.\n"],["list","Heroku::Command::Addons","Heroku/Command/Addons.html#method-i-list","()","<p>addons:list\n<p>list all available addons\n"],["list","Heroku::Plugin","Heroku/Plugin.html#method-c-list","()",""],["list_collaborators","Heroku::Client","Heroku/Client.html#method-i-list_collaborators","(app_name)","<p>Get a list of collaborators on the app, returns an array of hashes each\nwith :email\n"],["list_domains","Heroku::Client","Heroku/Client.html#method-i-list_domains","(app_name)",""],["list_drains","Heroku::Client","Heroku/Client.html#method-i-list_drains","(app_name)",""],["list_stacks","Heroku::Client","Heroku/Client.html#method-i-list_stacks","(app_name, options={})","<p>Get a list of stacks available to the app, with the current one marked.\n"],["load","Heroku::Command","Heroku/Command.html#method-c-load","()",""],["load!","Heroku::Plugin","Heroku/Plugin.html#method-c-load-21","()",""],["load_plugin","Heroku::Plugin","Heroku/Plugin.html#method-c-load_plugin","(plugin)",""],["load_taps","Heroku::Command::Db","Heroku/Command/Db.html#method-i-load_taps","()",""],["login","Heroku::Auth","Heroku/Auth.html#method-c-login","()",""],["login","Heroku::Command::Auth","Heroku/Command/Auth.html#method-i-login","()","<p>auth:login\n<p>log in with your heroku credentials\n"],["logout","Heroku::Auth","Heroku/Auth.html#method-c-logout","()",""],["logout","Heroku::Command::Auth","Heroku/Command/Auth.html#method-i-logout","()","<p>auth:logout\n<p>clear local authentication credentials\n"],["logs","Heroku::Client","Heroku/Client.html#method-i-logs","(app_name)","<p>Fetch recent logs from the app server.\n"],["longest","Heroku::Helpers","Heroku/Helpers.html#method-i-longest","(items)",""],["maintenance","Heroku::Client","Heroku/Client.html#method-i-maintenance","(app_name, mode)",""],["message","PGResolver::Resolver","PGResolver/Resolver.html#method-i-message","()",""],["method_added","Heroku::Command::Base","Heroku/Command/Base.html#method-c-method_added","(method)",""],["method_added","Heroku::Command::Base","Heroku/Command/Base.html#method-c-method_added","(method)",""],["migrate","Heroku::Command::Stack","Heroku/Command/Stack.html#method-i-migrate","()","<p>stack:migrate STACK\n<p>prepare migration of this app to a new stack\n"],["migrate_to_stack","Heroku::Client","Heroku/Client.html#method-i-migrate_to_stack","(app_name, stack)","<p>Request a stack migration.\n"],["name","PGResolver::Resolver","PGResolver/Resolver.html#method-i-name","()",""],["namespace","Heroku::Command::Base","Heroku/Command/Base.html#method-c-namespace","()",""],["namespace","Heroku::Command::Base","Heroku/Command/Base.html#method-c-namespace","()",""],["namespaces","Heroku::Command","Heroku/Command.html#method-c-namespaces","()",""],["new","Heroku::Client","Heroku/Client.html#method-c-new","(user, password, host=Heroku::Auth.default_host)",""],["new","Heroku::Client::ConsoleSession","Heroku/Client/ConsoleSession.html#method-c-new","(id, app, client)",""],["new","Heroku::Client::Rendezvous","Heroku/Client/Rendezvous.html#method-c-new","(opts)",""],["new","Heroku::Client::Service","Heroku/Client/Service.html#method-c-new","(client, app, upid=nil)",""],["new","Heroku::Command::Base","Heroku/Command/Base.html#method-c-new","(args=[], options={})",""],["new","Heroku::Command::Base","Heroku/Command/Base.html#method-c-new","(args=[], options={})",""],["new","Heroku::Command::Pgbackups::Display","Heroku/Command/Pgbackups/Display.html#method-c-new","(columns=nil, rows=nil, opts={})",""],["new","Heroku::Command::Pgbackups::Display::DataSource","Heroku/Command/Pgbackups/Display/DataSource.html#method-c-new","(data, opts={})",""],["new","Heroku::Deprecated::Help::HelpGroup","Heroku/Deprecated/Help/HelpGroup.html#method-c-new","(title)",""],["new","Heroku::Plugin","Heroku/Plugin.html#method-c-new","(uri)",""],["new","HerokuPostgresql::Client","HerokuPostgresql/Client.html#method-c-new","(url)",""],["new","HerokuSharedPostgresql::Client","HerokuSharedPostgresql/Client.html#method-c-new","(url)",""],["new","PGBackups::Client","PGBackups/Client.html#method-c-new","(uri)",""],["new","PGResolver::Resolver","PGResolver/Resolver.html#method-c-new","(db_id, config_vars)",""],["nibble","Heroku::OkJson","Heroku/OkJson.html#method-i-nibble","(c)",""],["nulltok","Heroku::OkJson","Heroku/OkJson.html#method-i-nulltok","(s)",""],["numenc","Heroku::OkJson","Heroku/OkJson.html#method-i-numenc","(x)",""],["numtok","Heroku::OkJson","Heroku/OkJson.html#method-i-numtok","(s)",""],["objenc","Heroku::OkJson","Heroku/OkJson.html#method-i-objenc","(x)",""],["objparse","Heroku::OkJson","Heroku/OkJson.html#method-i-objparse","(ts)","<p>Parses an \"object\" in the sense of RFC 4627. Returns the parsed value and\nany trailing tokens. ...\n"],["off","Heroku::Command::Maintenance","Heroku/Command/Maintenance.html#method-i-off","()","<p>maintenance:off\n<p>take the app out of maintenance mode\n"],["on","Heroku::Command::Maintenance","Heroku/Command/Maintenance.html#method-i-on","()","<p>maintenance:on\n<p>put the app into maintenance mode\n"],["on_warning","Heroku::Client","Heroku/Client.html#method-i-on_warning","(&blk)",""],["open","Heroku::Command::Addons","Heroku/Command/Addons.html#method-i-open","()","<p>addons:open ADDON\n<p>open an addon's dashboard in your browser\n"],["open","Heroku::Command::Apps","Heroku/Command/Apps.html#method-i-open","()","<p>apps:open\n<p>open the app in a web browser\n"],["output","Heroku::Helpers","Heroku/Helpers.html#method-i-output","(message=\"\", new_line=true)",""],["output_with_arrow","Heroku::Helpers","Heroku/Helpers.html#method-i-output_with_arrow","(message=\"\", new_line=true)",""],["output_with_bang","Heroku::Helpers","Heroku/Helpers.html#method-i-output_with_bang","(message=\"\", new_line=true)",""],["pairparse","Heroku::OkJson","Heroku/OkJson.html#method-i-pairparse","(ts)","<p>Parses a \"member\" in the sense of RFC 4627. Returns the parsed value and\nany trailing tokens. ...\n"],["parse","Heroku::Client::JSON","Heroku/Client/JSON.html#method-c-parse","(json)",""],["parse","Heroku::Command","Heroku/Command.html#method-c-parse","(cmd)",""],["parse_database_yml","Heroku::Command::Db","Heroku/Command/Db.html#method-i-parse_database_yml","()",""],["parse_error_json","Heroku::Command","Heroku/Command.html#method-c-parse_error_json","(body)",""],["parse_error_plain","Heroku::Command","Heroku/Command.html#method-c-parse_error_plain","(body)",""],["parse_error_xml","Heroku::Command","Heroku/Command.html#method-c-parse_error_xml","(body)",""],["parse_log","Heroku::Command::Logs","Heroku/Command/Logs.html#method-i-parse_log","(log)",""],["parse_taps_opts","Heroku::Command::Db","Heroku/Command/Db.html#method-i-parse_taps_opts","()",""],["path","Heroku::Plugin","Heroku/Plugin.html#method-i-path","()",""],["pgbackup_client","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-pgbackup_client","()",""],["poll_transfer!","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-poll_transfer-21","(transfer)",""],["prepare_run","Heroku::Command","Heroku/Command.html#method-c-prepare_run","(cmd, args=[])",""],["pretty_name","PGResolver::Resolver","PGResolver/Resolver.html#method-i-pretty_name","()",""],["process","Heroku::Client","Heroku/Client.html#method-i-process","(method, uri, extra_headers={}, payload=nil)",""],["promote","Heroku::Command::Pg","Heroku/Command/Pg.html#method-i-promote","()","<p>pg:promote [DATABASE]\n<p>Sets DATABASE as your DATABASE_URL\n"],["ps","Heroku::Client","Heroku/Client.html#method-i-ps","(app_name)","<p>Retreive ps list for the given app name.\n"],["ps_restart","Heroku::Client","Heroku/Client.html#method-i-ps_restart","(app, opts={})",""],["ps_run","Heroku::Client","Heroku/Client.html#method-i-ps_run","(app, opts={})",""],["ps_scale","Heroku::Client","Heroku/Client.html#method-i-ps_scale","(app, opts={})",""],["ps_stop","Heroku::Client","Heroku/Client.html#method-i-ps_stop","(app, opts={})",""],["psql","Heroku::Command::Pg","Heroku/Command/Pg.html#method-i-psql","()","<p>pg:psql [DATABASE]\n<p>Open a psql shell to the database\n<p>(dedicated only) defaults to DATABASE_URL databases ...\n"],["pull","Heroku::Command::Db","Heroku/Command/Db.html#method-i-pull","()","<p>db:pull [DATABASE_URL]\n<p>pull heroku data down into your local database\n<p>DATABASE_URL should reference your ...\n"],["push","Heroku::Command::Db","Heroku/Command/Db.html#method-i-push","()","<p>db:push [DATABASE_URL]\n<p>push local data up to your app\n<p>DATABASE_URL should reference your local database. ...\n"],["quantify","Heroku::Helpers","Heroku/Helpers.html#method-i-quantify","(string, num)",""],["rake","Heroku::Client","Heroku/Client.html#method-i-rake","(app_name, cmd)","<p>Run a rake command on the Heroku app and return all output as a string.\n"],["rake","Heroku::Command::Run","Heroku/Command/Run.html#method-i-rake","()","<p>run:rake COMMAND\n<p>remotely execute a rake command\n"],["read","Heroku::Client::Service","Heroku/Client/Service.html#method-i-read","()","<p>Read the next chunk of output.\n"],["read_credentials","Heroku::Auth","Heroku/Auth.html#method-c-read_credentials","()",""],["read_logs","Heroku::Client","Heroku/Client.html#method-i-read_logs","(app_name, options=[])",""],["reauthorize","Heroku::Auth","Heroku/Auth.html#method-c-reauthorize","()",""],["redisplay","Heroku::Helpers","Heroku/Helpers.html#method-i-redisplay","(line, line_break = false)",""],["register_command","Heroku::Command","Heroku/Command.html#method-c-register_command","(command)",""],["register_namespace","Heroku::Command","Heroku/Command.html#method-c-register_namespace","(namespace)",""],["release","Heroku::Client","Heroku/Client.html#method-i-release","(app, release)",""],["releases","Heroku::Client","Heroku/Client.html#method-i-releases","(app)",""],["remove","Heroku::Command::Addons","Heroku/Command/Addons.html#method-i-remove","()","<p>addons:remove ADDON\n<p>uninstall an addon\n"],["remove","Heroku::Command::Config","Heroku/Command/Config.html#method-i-remove","()","<p>config:remove KEY1 [KEY2 ...]\n<p>remove a config var\n"],["remove","Heroku::Command::Domains","Heroku/Command/Domains.html#method-i-remove","()","<p>domains:remove DOMAIN\n<p>remove a custom domain from an app\n"],["remove","Heroku::Command::Drains","Heroku/Command/Drains.html#method-i-remove","()","<p>drains:remove URL\n<p>remove a syslog drain\n"],["remove","Heroku::Command::Keys","Heroku/Command/Keys.html#method-i-remove","()","<p>keys:remove KEY\n<p>remove a key from the current user\n"],["remove","Heroku::Command::Sharing","Heroku/Command/Sharing.html#method-i-remove","()","<p>sharing:remove EMAIL\n<p>remove a collaborator from an app\n"],["remove","Heroku::Command::Ssl","Heroku/Command/Ssl.html#method-i-remove","()","<p>ssl:remove DOMAIN\n<p>remove an ssl certificate from an app\n"],["remove_all_keys","Heroku::Client","Heroku/Client.html#method-i-remove_all_keys","()","<p>Clear all keys on the current user.\n"],["remove_collaborator","Heroku::Client","Heroku/Client.html#method-i-remove_collaborator","(app_name, email)","<p>Remove a collaborator.\n"],["remove_config_var","Heroku::Client","Heroku/Client.html#method-i-remove_config_var","(app_name, key)",""],["remove_domain","Heroku::Client","Heroku/Client.html#method-i-remove_domain","(app_name, domain)",""],["remove_domains","Heroku::Client","Heroku/Client.html#method-i-remove_domains","(app_name)",""],["remove_drain","Heroku::Client","Heroku/Client.html#method-i-remove_drain","(app_name, url)",""],["remove_key","Heroku::Client","Heroku/Client.html#method-i-remove_key","(key)","<p>Remove an existing ssh public key from the current user.\n"],["remove_plugin","Heroku::Plugin","Heroku/Plugin.html#method-c-remove_plugin","(plugin)",""],["remove_ssl","Heroku::Client","Heroku/Client.html#method-i-remove_ssl","(app_name, domain)",""],["rename","Heroku::Command::Apps","Heroku/Command/Apps.html#method-i-rename","()","<p>apps:rename NEWNAME\n<p>rename the app\n"],["render","Heroku::Command::Pgbackups::Display","Heroku/Command/Pgbackups/Display.html#method-i-render","(*data)",""],["reset","Heroku::Command::Pg","Heroku/Command/Pg.html#method-i-reset","()","<p>pg:reset [DATABASE]\n<p>Delete all data in DATABASE\n"],["reset","HerokuPostgresql::Client","HerokuPostgresql/Client.html#method-i-reset","()",""],["reset_database","HerokuSharedPostgresql::Client","HerokuSharedPostgresql/Client.html#method-i-reset_database","()",""],["reset_password","HerokuSharedPostgresql::Client","HerokuSharedPostgresql/Client.html#method-i-reset_password","()",""],["resource","Heroku::Client","Heroku/Client.html#method-i-resource","(uri, options={})",""],["restart","Heroku::Client","Heroku/Client.html#method-i-restart","(app_name)","<p>Restart the app servers.\n"],["restart","Heroku::Command::Ps","Heroku/Command/Ps.html#method-i-restart","()","<p>ps:restart [PROCESS]\n<p>restart an app process\n<p>if PROCESS is not specified, restarts all processes on the ...\n"],["restore","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-restore","()","<p>pgbackups:restore [&lt;DATABASE&gt; [BACKUP_ID|BACKUP_URL]]\n<p>restore a backup to a database\n<p>if no DATABASE ...\n"],["retry_login?","Heroku::Auth","Heroku/Auth.html#method-c-retry_login-3F","()",""],["retry_on_exception","Heroku::Helpers","Heroku/Helpers.html#method-i-retry_on_exception","(*exceptions)",""],["rollback","Heroku::Client","Heroku/Client.html#method-i-rollback","(app, release=nil)",""],["rollback","Heroku::Command::Releases","Heroku/Command/Releases.html#method-i-rollback","()","<p>releases:rollback [RELEASE]\n<p>roll back to an older release\n<p>if RELEASE is not specified, will roll back one ...\n"],["run","Heroku::Client::ConsoleSession","Heroku/Client/ConsoleSession.html#method-i-run","(cmd)",""],["run","Heroku::Command","Heroku/Command.html#method-c-run","(cmd, arguments=[])",""],["run_command","Heroku::Helpers","Heroku/Helpers.html#method-i-run_command","(command, args=[])",""],["run_console_command","Heroku::Client","Heroku/Client.html#method-i-run_console_command","(url, command, prefix=nil)","<p>internal method to run console commands formatting the output\n"],["running_on_a_mac?","Heroku::Helpers","Heroku/Helpers.html#method-i-running_on_a_mac-3F","()",""],["running_on_windows?","Heroku::Helpers","Heroku/Helpers.html#method-i-running_on_windows-3F","()",""],["running_on_windows?","Heroku::Updater","Heroku/Updater.html#method-c-running_on_windows-3F","()",""],["scale","Heroku::Command::Ps","Heroku/Command/Ps.html#method-i-scale","()","<p>ps:scale PROCESS1=AMOUNT1 ...\n<p>scale processes by the given amount\n<p>Example: heroku scale web=3 worker+1 ...\n"],["service","Heroku::Client","Heroku/Client.html#method-i-service","(app_name, upid)","<p>Get a Service instance to execute commands against.\n"],["set_buffer","Heroku::Helpers","Heroku/Helpers.html#method-i-set_buffer","(enable)",""],["set_credentials_permissions","Heroku::Auth","Heroku/Auth.html#method-c-set_credentials_permissions","()",""],["set_dynos","Heroku::Client","Heroku/Client.html#method-i-set_dynos","(app_name, qty)","<p>Scales the web processes.\n"],["set_workers","Heroku::Client","Heroku/Client.html#method-i-set_workers","(app_name, qty)","<p>Scales the background processes.\n"],["sha","HerokuPostgresql::Client","HerokuPostgresql/Client.html#method-i-sha","(url)",""],["sha","HerokuSharedPostgresql::Client","HerokuSharedPostgresql/Client.html#method-i-sha","(url)",""],["shell","Heroku::Helpers","Heroku/Helpers.html#method-i-shell","(cmd)",""],["show_info","HerokuSharedPostgresql::Client","HerokuSharedPostgresql/Client.html#method-i-show_info","()",""],["skip_plugins","Heroku::Plugin","Heroku/Plugin.html#method-c-skip_plugins","()",""],["space","Heroku::Deprecated::Help::HelpGroup","Heroku/Deprecated/Help/HelpGroup.html#method-i-space","()",""],["spinner","PgUtils","PgUtils.html#method-i-spinner","(ticks)",""],["start","Heroku::CLI","Heroku/CLI.html#method-c-start","(*args)",""],["start","Heroku::Client","Heroku/Client.html#method-i-start","(app_name, command, attached=false)","<p>Run a service. If Responds to #each and yields output as it's received.\n"],["start","Heroku::Client::Rendezvous","Heroku/Client/Rendezvous.html#method-i-start","()",""],["start","Heroku::Client::Service","Heroku/Client/Service.html#method-i-start","(command, attached=false)","<p>start the service\n"],["status","Heroku::Helpers","Heroku/Helpers.html#method-i-status","(message)",""],["stop","Heroku::Command::Ps","Heroku/Command/Ps.html#method-i-stop","()","<p>ps:stop PROCESS\n<p>stop an app process\n<p>Example: heroku stop run.3\n"],["strenc","Heroku::OkJson","Heroku/OkJson.html#method-i-strenc","(s)",""],["string_distance","Heroku::Helpers","Heroku/Helpers.html#method-i-string_distance","(first, last)",""],["strtok","Heroku::OkJson","Heroku/OkJson.html#method-i-strtok","(s)",""],["subst","Heroku::OkJson","Heroku/OkJson.html#method-i-subst","(u1, u2)",""],["surrogate?","Heroku::OkJson","Heroku/OkJson.html#method-i-surrogate-3F","(u)",""],["sym_keys","HerokuPostgresql::Client","HerokuPostgresql/Client.html#method-i-sym_keys","(c)",""],["taps_client","Heroku::Command::Db","Heroku/Command/Db.html#method-i-taps_client","(op, opts)",""],["textparse","Heroku::OkJson","Heroku/OkJson.html#method-i-textparse","(ts)","<p>Parses a \"json text\" in the sense of RFC 4627. Returns the parsed value and\nany trailing tokens. ...\n"],["ticking","PgUtils","PgUtils.html#method-i-ticking","()",""],["time_ago","Heroku::Helpers","Heroku/Helpers.html#method-i-time_ago","(elapsed)",""],["to_s","Heroku::Client::Service","Heroku/Client/Service.html#method-i-to_s","()","<p>All output as a string\n"],["to_s","Heroku::Plugin","Heroku/Plugin.html#method-i-to_s","()",""],["tok","Heroku::OkJson","Heroku/OkJson.html#method-i-tok","(s)","<p>Scans the first token in s and returns a 3-element list, or nil if no such\ntoken exists.\n<p>The first list ...\n"],["transfer","Heroku::Command::Sharing","Heroku/Command/Sharing.html#method-i-transfer","()","<p>sharing:transfer EMAIL\n<p>transfer an app to a new owner\n"],["transfer!","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-transfer-21","(from_url, from_name, to_url, to_name, opts={})",""],["transition","Heroku::Client::Service","Heroku/Client/Service.html#method-i-transition","(action)",""],["translate_fork_and_follow","PgUtils","PgUtils.html#method-i-translate_fork_and_follow","(addon, config)",""],["truetok","Heroku::OkJson","Heroku/OkJson.html#method-i-truetok","(s)",""],["truncate","Heroku::Helpers","Heroku/Helpers.html#method-i-truncate","(text, length)",""],["uchardec","Heroku::OkJson","Heroku/OkJson.html#method-i-uchardec","(s, i)","<p>Decodes unicode character u from UTF-8 bytes in string s at position i.\nReturns u and the number of bytes ...\n"],["ucharenc","Heroku::OkJson","Heroku/OkJson.html#method-i-ucharenc","(a, i, u)","<p>Encodes unicode character u as UTF-8 bytes in string a at position i.\nReturns the number of bytes written. ...\n"],["unfollow","Heroku::Command::Pg","Heroku/Command/Pg.html#method-i-unfollow","()","<p>pg:unfollow &lt;REPLICA&gt;\n<p>stop a replica from following and make it a read/write database\n"],["unfollow","HerokuPostgresql::Client","HerokuPostgresql/Client.html#method-i-unfollow","()",""],["uninstall","Heroku::Command::Plugins","Heroku/Command/Plugins.html#method-i-uninstall","()","<p>plugins:uninstall PLUGIN\n<p>uninstall a plugin\n"],["uninstall","Heroku::Plugin","Heroku/Plugin.html#method-i-uninstall","()",""],["uninstall_addon","Heroku::Client","Heroku/Client.html#method-i-uninstall_addon","(app_name, addon, options={})",""],["unquote","Heroku::OkJson","Heroku/OkJson.html#method-i-unquote","(q)","<p>Converts a quoted json string literal q into a UTF-8-encoded string. The\nrules are different than for ...\n"],["unsubst","Heroku::OkJson","Heroku/OkJson.html#method-i-unsubst","(u)",""],["up","Heroku::Client","Heroku/Client.html#method-i-up","(app_name, upid)","<p>Bring a service up.\n"],["up","Heroku::Client::Service","Heroku/Client/Service.html#method-i-up","()",""],["update","Heroku::Client","Heroku/Client.html#method-i-update","(name, attributes)","<p>Update an app.  Available attributes:\n\n<pre class=\"ruby\">:<span class=\"ruby-identifier\">name</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">rename</span> <span class=\"ruby-identifier\">the</span> <span class=\"ruby-identifier\">app</span> (<span class=\"ruby-identifier\">changes</span> <span class=\"ruby-identifier\">http</span> <span class=\"ruby-keyword\">and</span> <span class=\"ruby-identifier\">git</span> <span class=\"ruby-identifier\">urls</span>)\n</pre>\n"],["update","Heroku::Updater","Heroku/Updater.html#method-c-update","(beta=false)",""],["update_display","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-update_display","(transfer)",""],["updated_client_path","Heroku::Updater","Heroku/Updater.html#method-c-updated_client_path","()",""],["upgrade","Heroku::Command::Addons","Heroku/Command/Addons.html#method-i-upgrade","()","<p>addons:upgrade ADDON\n<p>upgrade an existing addon\n"],["upgrade_addon","Heroku::Client","Heroku/Client.html#method-i-upgrade_addon","(app_name, addon, config={})",""],["uri_hash_to_url","Heroku::Command::Db","Heroku/Command/Db.html#method-i-uri_hash_to_url","(uri)",""],["url","Heroku::Command::Pgbackups","Heroku/Command/Pgbackups.html#method-i-url","()","<p>pgbackups:url [BACKUP_ID]\n<p>get a temporary URL for a backup\n"],["usage_for_command","Heroku::Command::Help","Heroku/Command/Help.html#method-c-usage_for_command","(command)",""],["userinfo_from_uri","Heroku::Command::Db","Heroku/Command/Db.html#method-i-userinfo_from_uri","(uri)",""],["valparse","Heroku::OkJson","Heroku/OkJson.html#method-i-valparse","(ts)","<p>Parses a \"value\" in the sense of RFC 4627. Returns the parsed value and any\ntrailing tokens. ...\n"],["version","Heroku::Client","Heroku/Client.html#method-c-version","()",""],["wait","Heroku::Command::Pg","Heroku/Command/Pg.html#method-i-wait","()","<p>pg:wait [DATABASE]\n<p>monitor database creation, exit when complete\n<p>defaults to all databases if no DATABASE ...\n"],["with_tty","Heroku::Helpers","Heroku/Helpers.html#method-i-with_tty","(&block)",""],["workers","Heroku::Client","Heroku/Client.html#method-i-workers","(app_name)",""],["workers","Heroku::Command::Ps","Heroku/Command/Ps.html#method-i-workers","()","<p>ps:workers [QTY]\n<p>scale to QTY background processes\n<p>if QTY is not specified, display the number of background ...\n"],["write_credentials","Heroku::Auth","Heroku/Auth.html#method-c-write_credentials","()",""]]}}